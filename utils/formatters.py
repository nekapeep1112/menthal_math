from typing import Dict, List
from datetime import datetime, timedelta

def format_welcome_message(name: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    return f"""
üßÆ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–µ–Ω—Ç–∞–ª—å–Ω—É—é –ê—Ä–∏—Ñ–º–µ—Ç–∏–∫—É!</b>

–ü—Ä–∏–≤–µ—Ç, <b>{name}</b>! üëã

–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–≤–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –±—ã—Å—Ç—Ä–æ–≥–æ —Å—á—ë—Ç–∞ –≤ —É–º–µ. 
–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å:

üéØ <b>10 —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏</b> - –æ—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∫ —Å–ª–æ–∂–Ω–æ–º—É
‚ö° <b>–ë—ã—Å—Ç—Ä—ã–µ –∑–∞–¥–∞—á–∏</b> - —Ä–∞–∑–≤–∏–≤–∞–π —Å–∫–æ—Ä–æ—Å—Ç—å –º—ã—à–ª–µ–Ω–∏—è
üèÜ <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</b> - —Å–æ–±–∏—Ä–∞–π –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ —É—Å–ø–µ—Ö–∏
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b> - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å

<i>–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?</i> üí™
"""

def get_random_greeting(name: str) -> str:
    """–°–ª—É—á–∞–π–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏–∑ 15 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤"""
    import random
    
    greetings = [
        f"üåü –ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç, {name}! –ì–æ—Ç–æ–≤ –ø–æ–∫–æ—Ä–∏—Ç—å –º–∏—Ä –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏?",
        f"üéâ –°–∞–ª—é—Ç, {name}! –î–∞–≤–∞–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–æ–∑–≥ –≤–º–µ—Å—Ç–µ!",
        f"üöÄ –ó–¥–æ—Ä–æ–≤–æ, {name}! –í—Ä–µ–º—è –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π!",
        f"‚≠ê –û—Ç–ª–∏—á–Ω–æ, {name}! –ë–æ—Ç –º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∏ –∫ —Ç–≤–æ–∏–º —É—Å–ª—É–≥–∞–º!",
        f"üéØ –ü—Ä–∏–≤–µ—Ç, {name}! –ì–æ—Ç–æ–≤ —Å—Ç–∞—Ç—å –º–∞—Å—Ç–µ—Ä–æ–º –±—ã—Å—Ç—Ä–æ–≥–æ —Å—á–µ—Ç–∞?",
        f"üåà –ö–ª–∞—Å—Å–Ω–æ, {name}! –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∂–¥–µ—Ç —Ç–µ–±—è!",
        f"üí™ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {name}! –ü—Ä–æ–∫–∞—á–∞–µ–º –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏?",
        f"üéä –•–µ–π, {name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –º–∏—Ä —á–∏—Å–µ–ª!",
        f"üî• –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ, {name}! –ì–æ—Ç–æ–≤ –∫ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—ã–∑–æ–≤–∞–º?",
        f"üå∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}! –ù–∞—á–Ω–µ–º –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ!",
        f"‚ö° –°—É–ø–µ—Ä, {name}! –¢–≤–æ–π –º–æ–∑–≥ –≥–æ—Ç–æ–≤ –∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ?",
        f"üéà –£—Ä–∞, {name}! –°–∞–º–æ–µ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç—å—Å—è –º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–æ–π!",
        f"‚ú® –ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ, {name}! –ü–æ–≥—Ä—É–∑–∏–º—Å—è –≤ –º–∏—Ä –±—ã—Å—Ç—Ä–æ–≥–æ —Å—á–µ—Ç–∞!",
        f"üèÜ –ë—Ä–∞–≤–æ, {name}! –°—Ç–∞–Ω—å —á–µ–º–ø–∏–æ–Ω–æ–º –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏!",
        f"üé™ –§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞, {name}! –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ü–∏—Ä–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!"
    ]
    
    selected_greeting = random.choice(greetings)
    
    return f"""
{selected_greeting}

üßÆ <b>–û–±—É—á–∞—é—â–∏–π –±–æ—Ç –º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∏</b>

üéØ <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:</b>
‚Ä¢ üìö 10 —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
‚Ä¢ üßÆ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏  
‚Ä¢ üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚Ä¢ üèÜ –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
‚Ä¢ üèÖ –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥
‚Ä¢ üì∏ –û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ üé¨ –í–∏–¥–µ–æ-—É—Ä–æ–∫–∏
‚Ä¢ ‚öôÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

üöÄ <b>–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é!</b> üëá
"""

def format_level_info(level: int, description: str, difficulty: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—Ä–æ–≤–Ω–µ"""
    return f"""
üìö <b>–£—Ä–æ–≤–µ–Ω—å {level}</b> {difficulty}

{description}

<i>–í—ã–±–µ—Ä–∏ —ç—Ç–æ—Ç —É—Ä–æ–≤–µ–Ω—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ!</i>
"""

def format_problem(problem_text: str, problem_num: int, total_problems: int, time_left: int) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"""
    progress_bar = get_progress_bar(problem_num, total_problems)
    
    return f"""
üßÆ <b>–ó–∞–¥–∞—á–∞ {problem_num}/{total_problems}</b>

{progress_bar}

<b>{problem_text}</b>

‚è±Ô∏è –í—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å: <b>{time_left}—Å</b>

<i>–í—ã–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:</i>
"""

def format_user_stats(stats: Dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if not stats:
        return "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</b>\n\n–ù–∞—á–Ω–∏ —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!"
    
    accuracy_emoji = get_accuracy_emoji(stats["accuracy"])
    level_emoji = get_level_emoji(stats["level"])
    
    return f"""
üìä <b>–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

{level_emoji} <b>–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å:</b> {stats["level"]}
üéØ <b>–û–±—â–∏–π —Å—á—ë—Ç:</b> {stats["total_score"]} –æ—á–∫–æ–≤

üìà <b>–û–±—É—á–µ–Ω–∏–µ:</b>
‚îú üéÆ –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: {stats["total_sessions"]}
‚îú ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {stats["completed_sessions"]}
‚îú üßÆ –†–µ—à–µ–Ω–æ –∑–∞–¥–∞—á: {stats["total_problems"]}
‚îî üéØ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {stats["correct_answers"]}

{accuracy_emoji} <b>–¢–æ—á–Ω–æ—Å—Ç—å:</b> {stats["accuracy"]}%
üèÜ <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b> {stats["achievements_count"]}

<i>–ü—Ä–æ–¥–æ–ª–∂–∞–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è!</i> üí™
"""

def format_session_result(correct: int, total: int, time_taken: float, level: int, 
                         last_answer_correct: bool = None, last_correct_answer: int = None, 
                         new_record: bool = False) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–µ—Å—Å–∏–∏"""
    accuracy = round((correct / total) * 100, 1) if total > 0 else 0
    accuracy_emoji = get_accuracy_emoji(accuracy)
    
    avg_time = round(time_taken / total, 1) if total > 0 else 0
    
    result_emoji = "üéâ" if accuracy >= 80 else "üëç" if accuracy >= 60 else "üí™"
    record_text = "\nüèÜ <b>–ù–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥!</b>" if new_record else ""
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –µ—Å–ª–∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–Ω
    last_answer_text = ""
    if last_answer_correct is not None:
        if last_answer_correct:
            last_answer_text = "‚úÖ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç: –ü—Ä–∞–≤–∏–ª—å–Ω–æ!</b>\n\n"
        else:
            last_answer_text = f"‚ùå <b>–ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!</b>\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <b>{last_correct_answer}</b>\n\n"
    
    return f"""
{last_answer_text}{result_emoji} <b>–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>

üìö <b>–£—Ä–æ–≤–µ–Ω—å:</b> {level}
üéØ <b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b> {correct}/{total} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö
{accuracy_emoji} <b>–¢–æ—á–Ω–æ—Å—Ç—å:</b> {accuracy}%
‚è±Ô∏è <b>–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è:</b> {avg_time}—Å –Ω–∞ –∑–∞–¥–∞—á—É
üïê <b>–û–±—â–µ–µ –≤—Ä–µ–º—è:</b> {format_time(time_taken)}
{record_text}

{get_result_message(accuracy)}
"""

def format_achievement_earned(achievement_name: str, achievement_desc: str, achievement_icon: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"""
    return f"""
üéâ <b>–ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!</b>

{achievement_icon} <b>{achievement_name}</b>
<i>{achievement_desc}</i>

–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéä
"""

def format_achievements_list(achievements: List[Dict]) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π"""
    if not achievements:
        return "üèÜ <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</b>\n\n–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.\n–†–µ—à–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—ã–µ –Ω–∞–≥—Ä–∞–¥—ã! üí™"
    
    text = "üèÜ <b>–¢–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</b>\n\n"
    
    for achievement in achievements:
        earned_date = achievement.get("earned_at", "")
        if earned_date:
            earned_date = f" ({earned_date.strftime('%d.%m.%Y')})"
        
        text += f"{achievement['icon']} <b>{achievement['name']}</b>{earned_date}\n"
        text += f"<i>{achievement['description']}</i>\n\n"
    
    return text

def get_progress_bar(current: int, total: int, length: int = 10) -> str:
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞"""
    filled = int((current / total) * length)
    bar = "‚ñà" * filled + "‚ñë" * (length - filled)
    return f"[{bar}] {current}/{total}"

def get_accuracy_emoji(accuracy: float) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏"""
    if accuracy >= 95:
        return "üåü"
    elif accuracy >= 85:
        return "‚≠ê"
    elif accuracy >= 75:
        return "üéØ"
    elif accuracy >= 60:
        return "üìà"
    else:
        return "üí™"

def get_level_emoji(level: int) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è"""
    if level >= 10:
        return "üëë"
    elif level >= 8:
        return "üíé"
    elif level >= 6:
        return "üèÜ"
    elif level >= 4:
        return "ü•á"
    elif level >= 2:
        return "ü•à"
    else:
        return "ü•â"

def get_result_message(accuracy: float) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º"""
    if accuracy >= 90:
        return "<i>–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≥–µ–Ω–∏–π! üåü</i>"
    elif accuracy >= 80:
        return "<i>–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! ‚≠ê</i>"
    elif accuracy >= 70:
        return "<i>–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ï—Å—Ç—å –∫—É–¥–∞ —Ä–∞—Å—Ç–∏! üìà</i>"
    elif accuracy >= 50:
        return "<i>–ù–µ–ø–ª–æ—Ö–æ! –ë–æ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –±—É–¥–µ—Ç –ª—É—á—à–µ! üí™</i>"
    else:
        return "<i>–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è! –ö–∞–∂–¥—ã–π –º–∞—Å—Ç–µ—Ä –∫–æ–≥–¥–∞-—Ç–æ –±—ã–ª –Ω–æ–≤–∏—á–∫–æ–º! üéØ</i>"

def format_time(seconds: float) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏"""
    if seconds < 60:
        return f"{int(seconds)}—Å"
    elif seconds < 3600:
        minutes = int(seconds // 60)
        secs = int(seconds % 60)
        return f"{minutes}–º {secs}—Å"
    else:
        hours = int(seconds // 3600)
        minutes = int((seconds % 3600) // 60)
        return f"{hours}—á {minutes}–º"

def format_help_message() -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–º–æ—â–∏"""
    return """
‚ùì <b>–°–ø—Ä–∞–≤–∫–∞</b>

<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</b>

üßÆ <b>–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ</b> - –≤—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å –∏ —Ä–µ—à–∞–π –∑–∞–¥–∞—á–∏
üìä <b>–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b> - –ø–æ—Å–º–æ—Ç—Ä–∏ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å
üèÜ <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</b> - —Å–æ–±–∏—Ä–∞–π –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ —É—Å–ø–µ—Ö–∏
‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b> - –Ω–∞—Å—Ç—Ä–æ–π –±–æ—Ç–∞ –ø–æ–¥ —Å–µ–±—è

<b>–£—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:</b>
üü¢ 1-2: –ü—Ä–æ—Å—Ç—ã–µ –∑–∞–¥–∞—á–∏ –Ω–∞ —Å–ª–æ–∂–µ–Ω–∏–µ/–≤—ã—á–∏—Ç–∞–Ω–∏–µ
üü° 3-5: –°—Ä–µ–¥–Ω—è—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å —Å –±–æ–ª—å—à–∏–º–∏ —á–∏—Å–ª–∞–º–∏
üü† 6-8: –°–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ —É–º–Ω–æ–∂–µ–Ω–∏–µ
üî¥ 9-10: –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å

<b>–°–æ–≤–µ—Ç—ã:</b>
‚Ä¢ –†–µ—à–∞–π –∑–∞–¥–∞—á–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
‚Ä¢ –ù–µ —Ç–æ—Ä–æ–ø–∏—Å—å - —Ç–æ—á–Ω–æ—Å—Ç—å –≤–∞–∂–Ω–µ–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π —Ç–µ—Ö–Ω–∏–∫–∏ –º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∏
‚Ä¢ –°–ª–µ–¥–∏ –∑–∞ —Å–≤–æ–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ

<i>–£–¥–∞—á–∏ –≤ –æ–±—É—á–µ–Ω–∏–∏! üçÄ</i>
"""

def format_leaderboard(leaderboard: List[Dict], user_rank: Dict = None) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    if not leaderboard:
        return """
üèÜ <b>–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥</b>

–†–µ–π—Ç–∏–Ω–≥ –ø–æ–∫–∞ –ø—É—Å—Ç.
–ù–∞—á–Ω–∏ —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏, —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–æ–ø! üí™
"""
    
    text = "üèÜ <b>–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥</b>\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for user in leaderboard:
        position = user['position']
        name = user['name']
        score = user['score']
        level = user['level']
        
        # –≠–º–æ–¥–∑–∏ –¥–ª—è –ø–æ–∑–∏—Ü–∏–π
        if position == 1:
            emoji = "ü•á"
        elif position == 2:
            emoji = "ü•à"
        elif position == 3:
            emoji = "ü•â"
        else:
            emoji = f"{position}."
        
        # –≠–º–æ–¥–∑–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è
        level_emoji = get_level_emoji(level)
        
        text += f"{emoji} <b>{name}</b>\n"
        text += f"    üíé {score} –æ—á–∫–æ–≤ {level_emoji} —É—Ä.{level}\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∑–∏—Ü–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_rank and user_rank.get('position'):
        position = user_rank['position']
        total = user_rank['total_users']
        score = user_rank['score']
        level = user_rank['level']
        
        text += "‚îÄ" * 25 + "\n"
        text += f"üìç <b>–¢–≤–æ—è –ø–æ–∑–∏—Ü–∏—è:</b> {position}/{total}\n"
        text += f"üíé <b>–¢–≤–æ–∏ –æ—á–∫–∏:</b> {score}\n"
        text += f"{get_level_emoji(level)} <b>–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å:</b> {level}"
    
    return text 